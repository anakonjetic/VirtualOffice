@using Microsoft.AspNetCore.Identity
@using VirtualOffice.Data
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@inject ApplicationDbContext DbContext

@{
    var isAuthenticated = User.Identity.IsAuthenticated.ToString().ToLower();
    var loggedInUserId =User.Identity.Name;
    var employee = DbContext.Employee.SingleOrDefault(e => e.UserId == loggedInUserId);
    var isManager = employee?.Id != null && DbContext.EmployeeManager.Any(em => em.ManagerId == employee.Id);
}


<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity?.Name!</a>
    </li>
    <li class="nav-item">
        <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
    /*   <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>*/
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>

@section Scripts {
    <script>
        window.onload = function () {
            var isAuthenticated = '@isAuthenticated';
            var isManager = '@isManager';
            
            if (isAuthenticated === 'true') {
                if (isManager) {
                    window.location.href = '/Manager/ManagerHomePage';
                } else {
                    window.location.href = '/Employee/EmployeeHomePage';
                }
            }
        };
    </script>
}

